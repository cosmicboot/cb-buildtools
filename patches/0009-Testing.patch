From 4ee432e81ee4d43c2713e2d1f405a77546e80044 Mon Sep 17 00:00:00 2001
From: Mathias Gredal <mathiasgredal@icloud.com>
Date: Thu, 30 Jan 2025 01:59:19 +0100
Subject: [PATCH 9/9] Testing

---
 cmd/wasm.c            | 31 ++++++++++++++++++++++---------
 include/wasm3/wasm3.h |  3 +--
 lib/wasm3/m3_env.c    | 17 ++++-------------
 3 files changed, 27 insertions(+), 24 deletions(-)

diff --git a/cmd/wasm.c b/cmd/wasm.c
index c02dd54e..cc907137 100644
--- a/cmd/wasm.c
+++ b/cmd/wasm.c
@@ -7,9 +7,19 @@
 #include <fs.h>
 #include <log.h>
 #include <mapmem.h>
+#include <stdio.h>
 #include <vsprintf.h>
 #include <wasm3/wasm3.h>
 
+#define LINK_RAW_FUNCTION(module, func_name, sig, func_ptr) \
+do { \
+    M3Result result = m3_LinkRawFunction(module, "env", func_name, sig, func_ptr); \
+    if (result != m3Err_none) { \
+        log_err("error linking function: %s\n", result); \
+        return 1; \
+    } \
+} while (0)
+
 m3ApiRawFunction(env_print)
 {
     m3ApiGetArgMem(void *, i_ptr);
@@ -17,13 +27,18 @@ m3ApiRawFunction(env_print)
 
     m3ApiCheckMem(i_ptr, i_size);
 
-    printf("%.*s", i_size, i_ptr);
+    printf("%.*s", i_size, (char *)i_ptr);
 
     m3ApiSuccess();
 }
 
-static int do_wasm(struct cmd_tbl *cmdtp, int flag, int argc,
-                   char *const argv[])
+m3ApiRawFunction(env_ping)
+{
+    printf("pong\n");
+    m3ApiSuccess();
+}
+
+static int do_wasm(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 {
     printf("Running WASM program...\n");
 
@@ -66,13 +81,11 @@ static int do_wasm(struct cmd_tbl *cmdtp, int flag, int argc,
         return 1;
     }
 
-    result = m3_LinkRawFunction(module, "env", "env_print", "v(*i)", &env_print);
-    if (result != m3Err_none)
-    {
-        log_err("error linking function: %s\n", result);
-        return 1;
-    }
+    // Linking functions
+    LINK_RAW_FUNCTION(module, "env_print", "v(*i)", &env_print);
+    LINK_RAW_FUNCTION(module, "env_ping", "v()", &env_ping);
 
+    // Find and call the main function
     IM3Function function = NULL;
     result = m3_FindFunction(&function, runtime, "main");
     if (result != m3Err_none)
diff --git a/include/wasm3/wasm3.h b/include/wasm3/wasm3.h
index 3f6e5f0f..278067cc 100644
--- a/include/wasm3/wasm3.h
+++ b/include/wasm3/wasm3.h
@@ -14,9 +14,8 @@
 #define M3_VERSION "0.5.1"
 
 #include <stddef.h>
-#include <stdlib.h>
 #include <stdint.h>
-#include <inttypes.h>
+#include <linux/types.h>
 #include <stdarg.h>
 
 #include "wasm3_defs.h"
diff --git a/lib/wasm3/m3_env.c b/lib/wasm3/m3_env.c
index 9b4097ed..3606f099 100644
--- a/lib/wasm3/m3_env.c
+++ b/lib/wasm3/m3_env.c
@@ -8,12 +8,13 @@
 #include <stdarg.h>
 #include <limits.h>
 
+#include <stdlib.h>
 #include <wasm3/m3_env.h>
 #include <wasm3/m3_compile.h>
 #include <wasm3/m3_exception.h>
 #include <wasm3/m3_info.h>
 
-IM3Environment m3_NewEnvironment()
+IM3Environment m3_NewEnvironment(void)
 {
     IM3Environment env = m3_AllocStruct(M3Environment);
 
@@ -1068,23 +1069,13 @@ M3Result m3_CallArgv(IM3Function i_function, uint32_t i_argc, const char *i_argv
         switch (d_FuncArgType(ftype, i))
         {
         case c_m3Type_i32:
-            *(i32 *)(s) = strtoul(i_argv[i], NULL, 10);
+            *(i32 *)(s) = simple_strtoul(i_argv[i], NULL, 10);
             s += 8;
             break;
         case c_m3Type_i64:
-            *(i64 *)(s) = strtoull(i_argv[i], NULL, 10);
+            *(i64 *)(s) = simple_strtoull(i_argv[i], NULL, 10);
             s += 8;
             break;
-#if d_m3HasFloat
-        case c_m3Type_f32:
-            *(f32 *)(s) = strtod(i_argv[i], NULL);
-            s += 8;
-            break; // strtof would be less portable
-        case c_m3Type_f64:
-            *(f64 *)(s) = strtod(i_argv[i], NULL);
-            s += 8;
-            break;
-#endif
         default:
             return "unknown argument type";
         }
-- 
2.39.3 (Apple Git-146)

